{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-button/component.ts","./src/app/components/add-button/component.html","./src/app/components/note-list/component.ts","./src/app/components/note-list/component.html","./src/app/components/note-single/component.ts","./src/app/components/note-single/component.html","./src/app/components/sync-button/component.ts","./src/app/components/sync-button/component.html","./src/app/controllers/db/index.js","./src/app/controllers/db/providers/indexedDB.js","./src/app/controllers/firebase/config.js","./src/app/controllers/firebase/firestore.js","./src/app/controllers/firebase/syncd.js","./src/app/controllers/firebase/ui.js","./src/app/etc/flat.js","./src/app/etc/lang.js","./src/app/etc/resolveablePromise.js","./src/app/etc/setImmediate.js","./src/app/etc/setIntervalImmediate.js","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,yDAAI;AACrB;;AAEO;AACP,UAAU,yDAAI;AACd;;AAEO;AACP,WAAW,yDAAI;AACf;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtGA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAA6B;;AAE7B,YAAY,uCAAuC;AACnD,OAAO,WAAW;AAClB,mCAAmC,+CAAM;AACzC;AACA;AACA;AACA,CAAC;;AAEc,sFAAuB;;AAE/B;;;;;;;;;;;;;ACZP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACY;AACb;AACiC;AACJ;AAChD;;AAEb;;AAEA;AACA,WAAW,kDAAS,qBAAqB,yDAAI,8CAA8C,MAAM;AACjG;;AAEA;AACA,WAAW,kDAAS,qBAAqB,yDAAI;AAC7C;;AAEA;AACA,yBAAyB,8CAAkB;AAC3C,wDAAwD,6CAAiB;AACzE,6FAA6F,uCAAW;AACxG;AACA,mDAAmD,yDAAI;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,+DAAkB;;AAEjD;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,uBAAuB;AAClC;AACA;AACA;AACA,QAAQ,0CAAc;AACtB;AACA;AACA;AACA;AACA,QAAQ,uCAAW;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,uCAAW;AACvB;AACA;AACA;;AAEA;;AAEA,+CAAI;AACJ;AACA;AACA,sBAAsB,kDAAS;AAC/B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,0BAA0B,yEAAoB;AAC9C;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;ACxGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACXA;AAAe,6GAA8C;;;;;;;;;;;;;ACA7D;AAAe,2HAA4D;;;;;;;;;;;;;ACA3E;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEe;AACf,wBAAwB;AACxB;AACA,CAAC;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAyC;;AAE1B;AACf,IAAI,6DAAY;AAChB;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;AAChB;;;AAEzC,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport lang from './etc/lang'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'test-angular-app'\n  lang = lang\n}\n","<note-list></note-list>\n<add-button\n    class=\"round btn shadow-1\"\n></add-button>\n<sync-button></sync-button>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport NoteList from './components/note-list/component';\nimport NoteSingle from './components/note-single/component';\nimport AddButton from './components/add-button/component';\nimport SyncButton from './components/sync-button/component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NoteList,\n    NoteSingle,\n    AddButton,\n    SyncButton,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n  ],\n  providers: [ ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport * as DB from '../../controllers/db';\n\n@Component({\n  selector: 'add-button',\n  templateUrl: './component.html',\n  styleUrls: ['./component.scss']\n})\nexport default class AddButton {\n  async onClick(){\n    const count = await DB.get('general', 'noteCount') || 0;\n    DB.set('general', 'noteCount', count + 1)\n  }\n}\n","<div (click)=\"onClick()\">\n    <i aria-hidden=\"true\" class=\"material-icons mdc-fab__icon\">add</i>\n</div>\n","import { Component, ViewEncapsulation, NgZone } from '@angular/core'\nimport getData from '../../controllers/db'\nimport { map } from 'rxjs/operators'\nimport setImmediate from '../../etc/setImmediate'\n\n@Component({\n  selector: 'note-list',\n  templateUrl: './component.html',\n  styleUrls: [ './component.scss' ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport default class NoteList {\n  notes = getData('general', 'noteCount').pipe(map(v => new Array(v || 0)))\n  constructor(ngZone: NgZone){\n    this.notes.subscribe(() => {\n      setImmediate(() => ngZone.run(() => void 0))\n    })\n  }\n}\n","<note-single\n    *ngFor=\"let note of notes | async; index as noteId\"\n    [attr.data-id]=\"noteId\"\n    class=\"shadow-1 blk-material\"\n></note-single>\n<add-button\n    class=\"shadow-1 blk-material\"\n></add-button>\n","import { Component, ElementRef, OnInit, ViewEncapsulation, Renderer2 } from '@angular/core'\nimport getData, { remove, get, set, runPendingEvents } from '../../controllers/db'\nimport { map } from 'rxjs/operators'\nimport { Observable } from 'rxjs'\n\ntype Note = {\n    name: string\n    data: {\n        done: boolean\n        text: string\n    }[]\n}\n\nfunction getNoteList(element: Element): Element{\n    return element.nodeName === 'NOTE-LIST' ? element : getNoteList(element.parentElement!)\n}\n\nfunction removeEmpty(arr: Note['data']): any {\n    for(let i = arr.length - 1; i >= 1; i--){\n        if(arr[i - 1] && arr[i - 1].text) return arr;\n        arr.length--;\n        delete arr[i]\n    }\n}\n\n@Component({\n    selector: 'note-single',\n    templateUrl: './component.html',\n    styleUrls: [ './component.scss' ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport default class NoteSingle implements OnInit{\n    data: Observable<Note> | undefined\n    unnamed_text = 'Unnamed note'\n    text_here = 'Text here'\n    id: string | undefined\n    active = false\n    note: Note | undefined\n\n    constructor(private element: ElementRef, private renderer: Renderer2){}\n\n    ngOnInit(){\n        const id = this.element.nativeElement.getAttribute('data-id')!;\n        this.id = id;\n        this.data = getData('notes', id).pipe(map(v => {\n            v = v || { name: '', data: [] };\n            this.note = v;\n            return v\n        }));\n        this.renderer.listen(this.element.nativeElement, 'click', () => {\n            if(this.active) return;\n            this.active = true;\n            this.renderer.addClass(this.element.nativeElement, 'active');\n            this.renderer.addClass(getNoteList(this.element.nativeElement), 'has-active');\n        });\n    }\n\n    async remove(e: Event){\n        e.stopPropagation();\n        (document.activeElement as HTMLElement).blur();\n        const noteCount = await get('general', 'noteCount');\n        set('general', 'noteCount', noteCount - 1);\n        for(let id = +this.id! + 1; id < noteCount; id++) get('notes', `${id}`).then((v: any) => set('notes', `${id - 1}`, v));\n        remove('notes', `${noteCount - 1}`)\n    }\n\n    setText(i: number, { value }: any){\n        this.note!.data[i].text = value;\n        set('notes', this.id!, this.note!, true)\n    }\n\n    setDone(i: number, { checked }: any){\n        this.note!.data[i].done = checked;\n        set('notes', this.id!, this.note!, true)\n    }\n\n    setName({ value }: any){\n        this.note!.name = value;\n        set('notes', this.id!, this.note!, true)\n    }\n\n    sort(note: Note | null){\n        if(!note) return note;\n        note.data = note.data.filter(a => !a.done).concat(note.data.filter(a => a.done)).filter(v => v.text).slice(0, 3);\n        return note\n    }\n\n    full(note: Note | null){\n        if(!note) return note;\n        removeEmpty(note.data);\n        if(!note.data.length || note.data[note.data.length - 1].text) note.data.push({\n            done: false,\n            text: '',\n        });\n        return note\n    }\n\n    clickCancel(e: any){\n        e.stopPropagation();\n        this.active = false;\n        this.renderer.removeClass(this.element.nativeElement, 'active');\n        this.renderer.removeClass(getNoteList(this.element.nativeElement), 'has-active');\n        runPendingEvents()\n    }\n}\n","<button\n    class=\"round cancel shadow-1\"\n    (click)=\"clickCancel($event)\"\n><i class=\"material-icons\">arrow_back</i></button>\n\n<div\n    *ngIf=\"(active ? full : sort)(data | async) as note\"\n>\n    <h6\n        class=\"{{ note.name ? null : 'unnamed' }}\"\n    >{{ note.name ? note.name : unnamed_text }}</h6>\n    <input\n        [placeholder]=\"unnamed_text\"\n        (keyup)=\"setName($event.target)\"\n        [value]=\"note.name\"\n    >\n\n    <div>\n        <div *ngFor=\"let todo of note.data; index as i\">\n            <input\n                type=\"checkbox\"\n                (change)=\"setDone(i, $event.target)\"\n                [attr.checked]=\"todo.done ? 'checked' : null\"\n            >\n            <input\n                (keyup)=\"setText(i, $event.target)\"\n                [placeholder]=\"text_here\"\n                [value]=\"todo.text\"\n            >\n        </div>\n    </div>\n\n    <button\n        class=\"delete\"\n        (click)=\"remove($event)\"\n    ><i class=\"material-icons\">delete_outline</i></button>    \n</div>\n","import { Component, NgZone, ElementRef } from '@angular/core';\nimport { auth } from '../../controllers/firebase/firestore'\n\n@Component({\n  selector: 'sync-button',\n  templateUrl: './component.html',\n  styleUrls: ['./component.scss']\n})\nexport default class SyncButton {\n  sync_active = false\n  display_name = ''\n  constructor(ngZone: NgZone, private eRef: ElementRef){\n    auth.onAuthStateChanged(next => {\n      ngZone.run(() => {\n        if(next){\n          this.sync_active = true;\n          this.display_name = next.displayName || next.email || ''\n        } else {\n          this.sync_active = false;\n          this.display_name = ''\n        }\n      })\n    })\n  }\n  signOut(){\n    auth.signOut();\n    this.eRef.nativeElement.querySelector('label').click()\n  }\n}\n","<span class=\"name\">{{ display_name }}</span>\n<label for=\"sync-auth-chb\" class=\"{{ sync_active ? 'active' : '' }}\">\n    <i aria-hidden=\"true\" class=\"material-icons mdc-fab__icon\">sync</i>\n</label>\n<input type=\"checkbox\" id=\"sync-auth-chb\">\n<div id=\"firebaseui-auth-container\">\n    <label for=\"sync-auth-chb\">\n        <i aria-hidden=\"true\" class=\"material-icons mdc-fab__icon\">clear</i>\n    </label>\n</div>\n<div class=\"sign-out\">\n    <label for=\"sync-auth-chb\">\n        <i aria-hidden=\"true\" class=\"material-icons mdc-fab__icon\">clear</i>\n    </label>\n    <div class=\"firebaseui-container\">\n        <button (click)=\"signOut()\" class=\"mdl-button mdl-button--raised firebaseui-idp-button\">\n            <span class=\"firebaseui-idp-icon-wrapper\">\n                <i aria-hidden=\"true\" class=\"material-icons mdc-fab__icon\">power_settings_new</i>\n            </span>\n            <span class=\"firebaseui-idp-text firebaseui-idp-text-long\">Sign Out</span>\n        </button>\n    </div>\n</div>\n","import { Observable } from 'rxjs'\nimport * as provider from './providers/indexedDB'\n\nexport default function(table, name){\n    return new Observable(observer => {\n        provider.get(table, name).then(v => observer.next(v));\n        const handler = v => observer.next(v);\n        provider.onChange(table, name, handler);\n        return () => provider.offChange(table, name, handler)\n    })\n}\n\nexport const { get, set, remove, runPendingEvents, listTables, listNames } = provider\n","import { EventEmitter } from 'events'\nimport flat from '../../../etc/flat'\n\nconst ee = new EventEmitter;\nconst pendingEvents = Object.create(null);\nconst cache = Object.create(null);\nconst tables = [];\n\ninitDB(0, v => tables.push(v));\n\n/** @type {typeof import('./indexedDB.internal').request} */\nconst request = (obj, name, ...args) => {\n    let req;\n    const res = new Promise((resolve, reject) => {\n        const request = obj[name](...args);\n        req = request;\n        request.onerror = () => reject(request.error);\n        request.onsuccess = () => resolve(request.result)\n    });\n    res.request = req;\n    return res\n}\n\nfunction initDB(version, createObjectStore){\n    switch(version){\n        case 0:\n        case 1:\n            createObjectStore('general');\n            createObjectStore('notes');\n    }\n}\n\nasync function openDB(){\n    const dbr = request(indexedDB, 'open', 'data', 1);\n    dbr.request.onupgradeneeded = () => {\n        const db = dbr.request.result;\n        console.log('Upgradeneeded:', db.version, db);\n        initDB(db.version, v => db.createObjectStore(v))\n    }\n    return dbr\n}\n\nexport async function get(storeName, name){\n    if(!(name in cache)){\n        const db = await openDB();\n        const tx = db.transaction(storeName, 'readonly');\n        const store = tx.objectStore(storeName);\n        cache[name] = await request(store, 'get', name)\n    }\n    return cache[name] === undefined ? undefined : JSON.parse(JSON.stringify(cache[name]))\n}\n\nexport async function set(storeName, name, value, silent){\n    const db = await openDB();\n    const tx = db.transaction(storeName, 'readwrite');\n    const store = tx.objectStore(storeName);\n    await request(store, 'put', value, name);\n    cache[name] = value;\n    if(silent) pendingEvents[name] = [value, 'update'];\n    else ee.emit(flat(storeName, name), value, 'update')\n}\n\nexport async function remove(storeName, name, silent){\n    const db = await openDB();\n    const tx = db.transaction(storeName, 'readwrite');\n    const store = tx.objectStore(storeName);\n    await request(store, 'delete', name);\n    delete cache[name];\n    if(silent) pendingEvents[name] = [void 0, 'remove'];\n    else ee.emit(flat(storeName, name), void 0, 'remove')\n}\n\nexport function onChange(table, name, callback){\n    ee.on(flat(table, name), callback)\n}\n\nexport function offChange(table, name, callback){\n    ee.off(flat(table, name), callback)\n}\n\nexport function clearCache(){\n    for(const i in cache) delete cache[i]\n}\n\nexport function runPendingEvents(){\n    for(const name in pendingEvents){\n        const args = pendingEvents[name];\n        delete pendingEvents[name];\n        ee.emit(name, ...args)\n    }\n}\n\nexport async function listTables(){\n    return [...tables]\n}\n\nexport async function listNames(table){\n    const db = await openDB();\n    const tx = db.transaction(table, 'readonly');\n    const store = tx.objectStore(table);\n    const keys = await request(store, 'getAllKeys');\n    return [...keys]\n}\n","export default {\n    apiKey: \"AIzaSyBphpKblDDgvF7Waad5g77O0gqdmDVkeiI\",\n    authDomain: \"angular-test-notes-j87g65.firebaseapp.com\",\n    databaseURL: \"https://angular-test-notes-j87g65.firebaseio.com\",\n    projectId: \"angular-test-notes-j87g65\",\n    storageBucket: \"angular-test-notes-j87g65.appspot.com\",\n    messagingSenderId: \"277728976218\",\n    appId: \"1:277728976218:web:dae8ff7e6b81d5052d6763\",\n    measurementId: \"G-LX8TCCKBFM\"\n}\n","import config from './config'\n\n/** @type {{ firebase: typeof import('firebase') }} */\nconst { firebase } = Function('return this')();\nconst app = firebase.initializeApp(config);\ntry{\n    // may be blocked by ab blockers\n    firebase.analytics(app)\n} catch(e){}\n\nexport default firebase.firestore(app)\n\nexport const auth = firebase.auth(app)\n","import flat from '../../etc/flat'\nimport firestore, { auth } from './firestore'\nimport * as localDB from '../db'\nimport setIntervalImmediate from '../../etc/setIntervalImmediate'\nimport ResolveablePromise from '../../etc/resolveablePromise'\nimport './ui'\n\nlet uid;\n\nfunction set(table, name, value){\n    return firestore.collection(uid).doc(flat(table, name)).set(JSON.parse(JSON.stringify({value})))\n}\n\nfunction remove(table, name){\n    return firestore.collection(uid).doc(flat(table, name)).delete()\n}\n\nasync function populateLocalDB(){\n    const tables = await localDB.listTables();\n    const names = await Promise.all(tables.map(table => localDB.listNames(table).then(names => names.map(name => [ table, name ]))));\n    const values = await Promise.all(names.shift().concat(...names).map(([ table, name ]) => localDB.get(table, name).then(v => [ table, name, v ])));\n    const db = {};\n    for(const [ table, name, value ] of values) db[flat(table, name)] = value;\n    return db\n}\n\nfunction arrayChanges(base, next){\n    const deleted = base.filter(v => !next.includes(v));\n    return {\n        deleted,\n        added: next.filter(v => !base.includes(v)),\n        flat: base.filter(v => !deleted.includes(v)),\n    }\n}\n\nconst lastLocalSnapshot = {};\nconst firstLocalSnapshot = new ResolveablePromise;\n\nfunction onLocalSnapshot(snapshot){\n    const { deleted, added, flat } = arrayChanges(Object.keys(lastLocalSnapshot), Object.keys(snapshot));\n    for(const tablename of deleted){\n        const [ table, name ] = JSON.parse(tablename);\n        delete lastLocalSnapshot[tablename];\n        remove(table, name)\n    }\n    for(const tablename of added){\n        const [ table, name ] = JSON.parse(tablename);\n        lastLocalSnapshot[tablename] = snapshot[tablename];\n        set(table, name, snapshot[tablename])\n    }\n    for(const tablename of flat){\n        if(JSON.stringify(lastLocalSnapshot[tablename]) !== JSON.stringify(snapshot[tablename])){\n            const [ table, name ] = JSON.parse(tablename);\n            lastLocalSnapshot[tablename] = snapshot[tablename];\n            set(table, name, snapshot[tablename])\n        }\n    }\n}\n\nasync function onSnapshot(snapshot){\n    await firstLocalSnapshot;\n    const { deleted, added, flat } = arrayChanges(Object.keys(lastLocalSnapshot), Object.keys(snapshot));\n    for(const tablename of deleted){\n        const [ table, name ] = JSON.parse(tablename);\n        delete lastLocalSnapshot[tablename];\n        localDB.remove(table, name);\n    }\n    for(const tablename of added){\n        const [ table, name ] = JSON.parse(tablename);\n        lastLocalSnapshot[tablename] = snapshot[tablename];\n        localDB.set(table, name, snapshot[tablename])\n    }\n    for(const tablename of flat){\n        if(JSON.stringify(lastLocalSnapshot[tablename]) !== JSON.stringify(snapshot[tablename])){\n            const [ table, name ] = JSON.parse(tablename);\n            lastLocalSnapshot[tablename] = snapshot[tablename];\n            localDB.set(table, name, snapshot[tablename])\n        }\n    }\n}\n\nlet unsubscribe, intervalHandler;\n\nauth.onAuthStateChanged(user => {\n    if(user){\n        uid = user.uid;\n        unsubscribe = firestore.collection(uid).onSnapshot(snapshot => {\n            const objSnap = {};\n            snapshot.docs.map(doc => {\n                const data = doc.data();\n                objSnap[doc.id] = data && data.value || data\n            });\n            onSnapshot(objSnap)\n        }, err => alert(err.message));\n        intervalHandler = setIntervalImmediate(async () => {\n            const db = await populateLocalDB();\n            firstLocalSnapshot.resolve();\n            onLocalSnapshot(db)\n        }, 1000);\n    } else {\n        uid = undefined;\n        unsubscribe();\n        clearInterval(intervalHandler)\n    }\n})\n","const uiConfig = {\n    signInSuccessUrl: location.href,\n    signInOptions: [\n        firebase.auth.EmailAuthProvider.PROVIDER_ID,\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    ],\n    // to change later\n    tosUrl: location.href,\n    privacyPolicyUrl: location.href\n}\nconst ui = new firebaseui.auth.AuthUI(firebase.auth());\nui.start('#firebaseui-auth-container', uiConfig);\n","export default (table, name) => JSON.stringify([table, name])\n","export default (navigator.language || navigator.userLanguage).split('-')[0]\n","export default class _Promise{\n    constructor(callback){\n        let _, $;\n        const promise = new Promise((resolve, reject) => {\n            _ = resolve;\n            $ = reject;\n            if(callback) callback(resolve, reject)\n        });\n        promise.resolve = _;\n        promise.reject = $;\n        return promise\n    }\n}\n","const ID = Math.random();\nlet head = {},\n    tail = head;\n\nfunction onmessage(e){\n    if(e.data != ID) return;\n    head = head.next;\n    const func = head.func;\n    delete head.func;\n    func()\n}\n\naddEventListener('message', onmessage);\n\nexport default func => {\n    tail = tail.next = { func };\n    window.postMessage(ID, '*')\n}\n","import setImmediate from './setImmediate'\n\nexport default function setIntervalImmediate(callback, ...args){\n    setImmediate(callback);\n    return setInterval(callback, ...args)\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport './app/controllers/firebase/syncd'\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}